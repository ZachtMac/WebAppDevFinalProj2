@inject IJSRuntime js 

<div class="card">
    <div @onclick="@(() => AddToCart(MenuItem.Id))"
         class="menu-item-card card-body"
         style="
            --bg-color: @BackgroundColor;
            --text-color: @TextColor;
            border: 1px solid @BorderColor;
            border-radius: 4px;
    ">
        <div class="card-title">
            <h5>@MenuItem.Name</h5>
        </div>
        <div class="card-text">
            <p>
                Price: @MenuItem.FormattedPrice
            </p>
        </div>
    </div>
</div>


@code {

    [Parameter]
    [EditorRequired]
    public MenuItemViewModel MenuItem { get; set; } = default!;

    [Parameter]
    public OrderViewModel Order { get; set; } = default!;

    [Parameter]
    public string BackgroundColor { get; set; } = "white";

    [Parameter]
    public string TextColor { get; set; } = "black";

    [Parameter]
    public string BorderColor { get; set; } = "#989898";


    [Parameter]
    [EditorRequired]
    public EventCallback<int> OnAddToCart { get; set; }

    protected async void AddToCart(int menuItemId)
    {
        await OnAddToCart.InvokeAsync(menuItemId);
    }

}