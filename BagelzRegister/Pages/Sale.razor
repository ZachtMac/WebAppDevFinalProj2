@page "/sale/{CustomerId:int}"

@inject HttpClient http


@if(Customer is null)
{
    <Loader>
        <p>Retrieving customer info...</p>
    </Loader>
}
else
{
    <CustomerOrderCard Customer="@Customer" Order="@Order" BackgroundColor="#FFCC33" />

    <div class="menu-item-card-container">
        @foreach(var item in MenuItems)
        {
            <MenuItemCard MenuItem="item"  BackgroundColor="#F5F5F5" OnAddToCart="AddToCart"/>
        }
    </div>

    <div class="receipt-card-container my-3">
        <ReceiptCard Order="@Order" BackgroundColor="#F5F5F5"/>
    </div>
}


@code {

    [Parameter]
    public int CustomerId { get; set; }

    private CustomerViewModel? Customer { get; set; }

    private List<MenuItemViewModel> MenuItems { get; set; } = new();

    private OrderViewModel Order { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Customer = await http.GetFromJsonAsync<CustomerViewModel>($"api/customers/{CustomerId}");
        MenuItems = await http.GetFromJsonAsync<List<MenuItemViewModel>>("api/menuitems") ?? new();

        Order.CustomerId = CustomerId;
        Order.Customer = Customer;
        Order.OrderDate = DateTime.Now;

        await base.OnInitializedAsync();
    }

    private void AddToCart(int menuItemId)
    {
        // If it has the item, increment the quantity
        
        var existingItem = Order.OrderItems.FirstOrDefault(x => x.MenuItemId == menuItemId);
        
        if (existingItem != null)
        {
            existingItem.Quantity++;
        }
        else
        {
            // If it doesn't have the item, add it to the order
            var menuItem = MenuItems.FirstOrDefault(m => m.Id == menuItemId);
            Order.OrderItems.Add(new OrderItemViewModel
                {
                    MenuItemId = menuItemId,
                    MenuItem = menuItem,
                    OrderId = Order.Id,
                    Price = menuItem?.Price ?? 0,
                    Quantity = 1
                });
        }

        // Rerender
        StateHasChanged();
    }
}

