
@page "/orders/details/{OrderId:int}"

@inject HttpClient Http;

<h3>Order Details</h3>

@if (OrderId < 1)
{
    <p>Invalid order id.</p>
    <NavLink Href="/menuitems">Back to list</NavLink>
    return;
}

@if (Order is null)
{
    <Loader>
        Loading menu item details...
    </Loader>
    return;
}

<main class="p-2">
    <div>
        <h4>Order</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Id
            </dt>
            <dd class="col-sm-10">
                @Order.Id
            </dd>
            <dt class="col-sm-2">
                OrderDate
            </dt>
            <dd class="col-sm-10">
                @Order.OrderDate
            </dd>
            <dt class="col-sm-2">
                CustomerId
            </dt>
            <dd class="col-sm-10">
                @Order.CustomerId
            </dd>
            <dt class="col-sm-2">
                OrderItems
            </dt>
            <dd class="col-sm-10">
                @Order.OrderItemsReadable
            </dd>
            <dt class="col-sm-2">
                Total
            </dt>
            <dd class="col-sm-10">
                @(((Order.TotalPrice) + (Order.Tax)).ToString("C"))
            </dd>
        </dl>
    </div>
    <div>
        <NavLink Href="/orders">Back to list</NavLink>
    </div>
</main>

@code {

    [Parameter]
    public int OrderId { get; set; }

    public OrderViewModel? Order { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Order = await Http.GetFromJsonAsync<OrderViewModel>($"api/orders/{OrderId}");
    }
}
