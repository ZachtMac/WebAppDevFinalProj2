// <auto-generated />
using System;
using BagelzClassLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BagelzClassLibrary.Migrations
{
    [DbContext(typeof(BagelzContext))]
    [Migration("20231104025350_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("BagelzClassLibrary.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "White Bagel",
                            Price = 2m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Everything Bagel",
                            Price = 3m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Whole Wheat Bagel",
                            Price = 3m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cream Cheese",
                            Price = 1m
                        },
                        new
                        {
                            Id = 5,
                            Name = "BB Cream Cheese",
                            Price = 2m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cheese",
                            Price = 1m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Jalapeno Peppers",
                            Price = 1m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pepper",
                            Price = 1m
                        },
                        new
                        {
                            Id = 9,
                            Name = "Honey",
                            Price = 1m
                        },
                        new
                        {
                            Id = 10,
                            Name = "Bacon",
                            Price = 2m
                        },
                        new
                        {
                            Id = 11,
                            Name = "Egg",
                            Price = 2m
                        },
                        new
                        {
                            Id = 12,
                            Name = "Tomato",
                            Price = 1m
                        },
                        new
                        {
                            Id = 13,
                            Name = "Avacado",
                            Price = 2m
                        },
                        new
                        {
                            Id = 14,
                            Name = "Coffee",
                            Price = 2m
                        },
                        new
                        {
                            Id = 15,
                            Name = "Pop",
                            Price = 3m
                        },
                        new
                        {
                            Id = 16,
                            Name = "Tea",
                            Price = 2m
                        },
                        new
                        {
                            Id = 17,
                            Name = "Water",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLineItems");
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.Order", b =>
                {
                    b.HasOne("BagelzClassLibrary.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.OrderItem", b =>
                {
                    b.HasOne("BagelzClassLibrary.Entities.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BagelzClassLibrary.Entities.Order", null)
                        .WithMany("OrderLineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BagelzClassLibrary.Entities.Order", b =>
                {
                    b.Navigation("OrderLineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
